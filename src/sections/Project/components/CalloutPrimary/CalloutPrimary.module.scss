@import 'styles.scss';

@function leftPsuedoWidth($totalColumns, $maxWidth: null) {
  $result: $appSpacing;
  @if (type-of($maxWidth) == number) {
    $maxWidth: rem($maxWidth);
    @if $totalColumns != 4 {
      $pageSpacing: ($totalColumns - 1) * $gridGap;
      $result: calc(
        calc(#{$maxWidth} - #{$pageSpacing}) / #{$totalColumns} + #{$gridGap}
      );
    }
  } @else {
    $maxWidth: 100vw;
    @if $totalColumns != 4 {
      $pageSpacing: 2 * $appSpacing + ($totalColumns - 1) * $gridGap;
      $result: calc(
        calc(#{$maxWidth} - #{$pageSpacing}) / #{$totalColumns} + #{$gridGap}
      );
    }
  }

  @return $result;
}

.CalloutPrimary {
  @include grid-primary-section;
  background: color(background-inverse);
  padding-top: spacing(extra-large);
  padding-bottom: spacing(extra-loose);
  margin-top: calc(60% - #{spacing(extra-large)});
  position: relative;
  z-index: $z-index-forward;

  &:before {
    content: '';
    position: absolute;
    top: 0;
    height: 100%;
    left: calc(-1 * (#{leftPsuedoWidth(12, $desktop-max-width)}));
    width: #{leftPsuedoWidth(12, $desktop-max-width)};
    background: color(background-inverse);

    @media screen and (max-width: breakpoint($desktop-max-width + 2 * map-get($spacing, extra-loose))) {
      left: calc(-1 * (#{leftPsuedoWidth(12)}));
      width: #{leftPsuedoWidth(12)};
    }

    @media screen and (max-width: breakpoint(tablet)) {
      left: -1 * $appSpacing;
      width: $appSpacing;
    }
  }

  &:after {
    content: '';
    position: absolute;
    top: 0;
    height: 100%;
    background: color(background-inverse);
    right: calc(-0.5 * (100vw - #{$desktop-max-width * 1px}));
    width: calc(0.5 * (100vw - #{$desktop-max-width * 1px}));

    @media screen and (max-width: breakpoint($desktop-max-width + 2 * map-get($spacing, extra-loose))) {
      right: -1 * $appSpacing;
      width: $appSpacing;
    }
  }

  @include dark {
    background: color(background-primary);
    &:before,
    &:after {
      background: color(background-primary);
    }
  }
}
